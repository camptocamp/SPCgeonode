version: '2'
volumes:
  postgres:
    external:
      name: spcgeonode_postgres
  static:
  media:
  geoserver_datadir:
    external:
      name: spcgeonode_geoserver_datadir
  geoserver_geodata:
  geonode_config:
    external:
      name: spcgeonode_geonode_config
services:
  postgres:
    image: camptocamp/postgres:9.5
    volumes:
      - postgres:/var/lib/postgresql/data/
    restart: on-failure
  nginx:
    image: olivierdalang/spcgeonode:nginx-latest
    build: _service_nginx/
    environment:
      - HTTP_HOST=${HTTP_HOST}
      - RESOLVER=127.0.0.11
    ports:
      - "${HTTP_PORT}:80"
    volumes:
      - static:/spcgeonode-static/
      - media:/spcgeonode-media/
  geoserver:
    build: _service_geoserver/
    image: camptocamp/geonode_geoserver:${geonode_tag}
    environment:
      ADMIN_PASSWORD: '${admin_password}'
      ADMIN_USERNAME: 'admin'
      GEOSERVER_DATA_DIR: /mnt/geoserver_datadir
      GEOSERVER_DB_HOST: postgres
      GEOSERVER_DB_USER: geonode
      HTTPS_HOST: ${fqdn}
      HTTPS_PORT: 443
      PGPASSWORD: geonode
      GEONODE_INTERNAL_URL: http://django:8000
    volumes:
    - geoserver_datadir:/mnt/geoserver_datadir
    - geoserver_geodata:/mnt/geoserver_geodata
    labels:
      io.rancher.scheduler.affinity:host_label: application=true
      io.rancher.container.hostname_override: container_name
      io.rancher.container.pull_image: always
  django:
    build: .
    ports:
      - "8000:8000"
    image: camptocamp/geonode_django:${geonode_tag}
    environment: &geonode_env
      ALLOWED_HOSTS: '[''django'',''celery'']'
      BROKER_URL: amqp://guest:guest@rabbitmq.geonode-rabbitmq:5672/
      DATABASE_URL: postgres://geonode:geonode@postgres:5432/geonode
      HTTPS_HOST: ${fqdn}
      HTTPS_PORT: 443
      DEBUG: "False"
      ADMIN_USERNAME: 'admin'
      ADMIN_PASSWORD: '${admin_password}'
      ADMIN_EMAIL: 'info@camptocamp.com'
      GEOSERVER_BASE_URL: http://geoserver:8080/geoserver/
      GEOSERVER_PUBLIC_URL: https://${fqdn}/geoserver/
      DEFAULT_WORKSPACE: hazard
      MEDIA_ROOT: /mnt/apache_nas_data/uploaded/
      STATIC_ROOT: /mnt/apache_nas_data/static/
      SECRET_KEY: ${secret_key}
      MAP_BASELAYERS: |
        [{
           "source": {
             "ptype": "gxp_wmscsource",
             "url": "https://${fqdn}/geoserver/wms",
             "restUrl": "/gs/rest"
           }
        },{
          "source": {"ptype": "gxp_olsource"},
          "type":"OpenLayers.Layer",
          "args":["No background"],
          "visibility": false,
          "fixed": true,
          "group":"background"
        }, {
          "source": {"ptype": "gxp_olsource"},
          "type":"OpenLayers.Layer.OSM",
          "args":["OpenStreetMap"],
          "visibility": false,
          "fixed": true,
          "group":"background"
        }, {
          "source": {"ptype": "gxp_mapquestsource"},
          "name":"osm",
          "group":"background",
          "visibility": false
        }, {
          "source": {"ptype": "gxp_mapquestsource"},
          "name":"naip",
          "group":"background",
          "visibility": false
        }, {
          "source": {"ptype": "gxp_olsource"},
          "type":"OpenLayers.Layer.XYZ",
          "group":"background",
          "visibility": true,
          "fixed": true,
          "args":[ "mapbox",
                   ["https://a.tiles.mapbox.com/v4/ingenieroariel.m9a2h374/$$$${z}/$$$${x}/$$$${y}.png?access_token=pk.eyJ1IjoiaW5nZW5pZXJvYXJpZWwiLCJhIjoibXhDZ3pIMCJ9.qTmPYCbnUKtaNFkvKKysAQ",
                    "https://b.tiles.mapbox.com/v4/ingenieroariel.m9a2h374/$$$${z}/$$$${x}/$$$${y}.png?access_token=pk.eyJ1IjoiaW5nZW5pZXJvYXJpZWwiLCJhIjoibXhDZ3pIMCJ9.qTmPYCbnUKtaNFkvKKysAQ",
                    "https://c.tiles.mapbox.com/v4/ingenieroariel.m9a2h374/$$$${z}/$$$${x}/$$$${y}.png?access_token=pk.eyJ1IjoiaW5nZW5pZXJvYXJpZWwiLCJhIjoibXhDZ3pIMCJ9.qTmPYCbnUKtaNFkvKKysAQ"],
                   {"transitionEffect": "resize","attribution": "osm_attribution"}
          ]
        }]
    volumes:
    - static:/mnt/apache_nas_data/static
    - media:/mnt/apache_nas_data/uploaded
    - /tmp
    entrypoint: ["/spcgeonode/docker-entrypoint.sh"]
    command:
    - uwsgi
    - --chdir=/spcgeonode
    - --module=spcgeonode.wsgi
    - --http=:8000
    - --processes=3
    - --max-requests=1000
    labels:
      io.rancher.scheduler.affinity:host_label: application=true
      io.rancher.sidekicks: cleanup
      io.rancher.container.hostname_override: container_name
      io.rancher.container.pull_image: always
