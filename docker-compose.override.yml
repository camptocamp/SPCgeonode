version: '3.1'

secrets:
  geonode_admin_username:
    file: _dev-secrets/geonode_admin_username
    external: false
  geonode_admin_email:
    file: _dev-secrets/geonode_admin_email
    external: false
  geonode_admin_password:
    file: _dev-secrets/geonode_admin_password
    external: false

services:
  postgres:
    ports:
      - "5432:5432"
    # volumes:
      # - ./volumes/database:/var/lib/postgresql/data # doesn't work because of ownership
  nginx:
    volumes:
      - ./volumes/static:/spcgeonode-static
      - ./volumes/media:/spcgeonode-media
      - ./volumes/certbot-challenge:/spcgeonode-certbot-challenge
      - ./volumes/certbot-keys:/spcgeonode-certbot-keys
  django:
    environment:
      - "DEBUG=True"
    volumes:
      - './django:/spcgeonode'
      - ./volumes/static:/spcgeonode-static
      - ./volumes/media:/spcgeonode-media
      - ./volumes/temp:/spcgeonode-temp
      - 'C:\Users\Olivier\Dropbox\Affaires\SPC\Sources\geonode-offlineosm:/offlineosm' # DEV : use local geonode_offlineosm library
    command: ["uwsgi", "--chdir=/spcgeonode", "--module=spcgeonode.wsgi", "--env=DJANGO_SETTINGS_MODULE=spcgeonode.settings", "--socket=:8000", "--py-autoreload=2"]
  celery:
    volumes:
      - './django:/spcgeonode'
      - ./volumes/temp:/spcgeonode-temp
      - 'C:\Users\Olivier\Dropbox\Affaires\SPC\Sources\geonode-offlineosm:/offlineosm' # DEV : use local geonode_offlineosm library
    entrypoint: ["/spcgeonode/docker-entrypoint-celery.sh"]
  celerycam:
    volumes:
      - './django:/spcgeonode'
      - ./volumes/temp:/spcgeonode-temp
      - 'C:\Users\Olivier\Dropbox\Affaires\SPC\Sources\geonode-offlineosm:/offlineosm' # DEV : use local geonode_offlineosm library
    entrypoint: ["/spcgeonode/docker-entrypoint-celery.sh"]

  geoserver:
    volumes:
      - ./volumes/geodatadir:/spcgeonode-geodatadir/

  letsencrypt:
    volumes:
      - ./volumes/certbot-challenge:/spcgeonode-certbot-challenge/
      - ./volumes/certbot-keys:/etc/letsencrypt/

  # backuper:
  #   volumes:
  #     # - ./volumes/database:/tobackup/spcgeonode-database # doesn't work because of ownership
  #     - ./volumes/media:/tobackup/spcgeonode-media
  #     - ./volumes/geodatadir:/tobackup/spcgeonode-geodatadir
