version: '2'
catalog:
  name: "SPC Geonode"
  description: "SPC Geonode"
  version: "0.0.10"
  uuid: spc-geonode-0.0.10
  questions:
    - variable: WAN_HOST
      label: "Hostname for WAN access"
      description: "Enter the domain name you will be using. This will setup SSL certificates and configure Nginx to accept connections on this domain name. Leave this empty if you only plan to use Geonode on LAN. If you have no domain name, but still want to test encryption, you can use xip.io : X.X.X.X.xip.io (replace X.X.X.X by the IP)."
      required: false
      default: null
      type: "string"
    - variable: LAN_HOST
      label: "Hostname for LAN access"
      description: "Enter the hostname name you will be using (most likely a LAN IP). This will configure Nginx to accept unencrypted connections on this domain name. Leave this empty if you only plan to use Geonode on WAN."
      required: false
      default: null
      type: "string"
    - variable: ADMIN_EMAIL
      label: "Email of the administrator"
      description: "This will be used as contact information for Let's Encrypt certificates and as email for the superuser"
      required: true
      type: "string"
    - variable: LETSENCRYPT_MODE
      label: "Let's Encrypt Mode"
      description: "Let's Encrypt has very conservative limits as to failed attemps, so you can very quickly hit the limits when doing tests. This is annoying, as if you hit the limit, it may take a few days before you can actually get a valid certificate. Set mode to *disabled* to disable getting certificates from LetsEncrypt alltogether or *staging* to use LetsEncrypt tests certificates (not valid, but with much higher limits)."
      required: true
      type: enum
      options:
        - disabled
        - staging
        - production
    - variable: REMOTE_SYNCTHING_MACHINE_ID
      label: "Syncthing device ID"
      description: "Backups are made using Syncthings. Install Syncthing on another device, and enter that device's Syncthing ID (in the form 0000000-0000000-0000000-0000000-0000000-0000000-0000000-0000000) here to automatically set up backups. Make sure to configure the folders to keep versions."
      required: false
      type: "string"
    - variable: _CHECK_ADDED_SECRET_SERVICE
      label: "Reminder : did you add the Rancher Secrets service from the catalog ?"
      description: "For this stack to work, you need to add the Rancher Secrets service from the catalog. See http://rancher.com/docs/rancher/v1.4/en/cattle/secrets/#enabling-secrets-in-containers for more informations."
      required: true
      default: null
      type: "boolean"
    - variable: _CHECK_ADDED_SECRET_ADMIN_USERNAME
      label: "Reminder : did you create the ADMIN_USERNAME secret ?"
      description: "For this stack to work, you need to create an ADMIN_USERNAME secret. This will be the Geonode and Geoserver administrator username"
      required: true
      default: null
      type: "boolean"
    - variable: _CHECK_ADDED_SECRET_ADMIN_PASSWORD
      label: "Reminder : did you create the ADMIN_PASSWORD secret ?"
      description: "For this stack to work, you need to create an ADMIN_PASSWORD secret. This will be the Geonode and Geoserver administrator password"
      required: true
      default: null
      type: "boolean"
services:    
  django:
    scale: 1
    start_on_create: true
  celery:
    scale: 1
    start_on_create: true
  celerycam:
    scale: 1
    start_on_create: true
  postgres:
    scale: 1
    start_on_create: true
  # elasticsearch:
  #   scale: 1
  #   start_on_create: true
  rabbitmq:
    scale: 1
    start_on_create: true
  nginx:
    scale: 1
    start_on_create: true
  geoserver:
    scale: 1
    start_on_create: true
  letsencrypt:
    # TODO : find a way to not restart too quickely on failure, because then we hit letsencrypt limits
    scale: 1
    start_on_create: true
  pgdumper:
    scale: 1
    start_on_create: true
  syncthing:
    scale: 1
    start_on_create: true
  
